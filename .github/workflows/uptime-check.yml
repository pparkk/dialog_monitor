name: Matsuri HR Login API Monitor

on:
  schedule:
    - cron: "0 * * * *"  # every hour

jobs:
  check-login:
    runs-on: ubuntu-latest
    environment: monitoring_environment

    steps:
      - name: Attempt login to API
        id: login
        env:
          MONITOR_ACCOUNT: ${{ secrets.MONITOR_ACCOUNT }}
          MONITOR_PASSWORD: ${{ secrets.MONITOR_PASSWORD }}
        run: |
          RESPONSE=$(curl -s -w "HTTPSTATUS:%{http_code}" -X POST https://api.matsuri-hr.com/hunting_users/sign_in \
            -H "Content-Type: application/json" \
            -d "{
              \"email\": \"$MONITOR_ACCOUNT\",
              \"password\": \"$MONITOR_PASSWORD\",
              \"grant_type\": \"password\",
              \"rememberMe\": false
            }")

          # Extract body and status
          BODY=$(echo "$RESPONSE" | sed -e 's/HTTPSTATUS\:.*//g')
          STATUS=$(echo "$RESPONSE" | tr -d '\n' | sed -e 's/.*HTTPSTATUS://')

          echo "Login HTTP status: $STATUS"
          echo "status_code=$STATUS" >> $GITHUB_OUTPUT
          echo "response_body=$BODY" >> $GITHUB_OUTPUT

      - name: Send Slack alert if login fails
        if: steps.login.outputs.status_code != '200'
        env:
          SLACK_WEBHOOK: ${{ secrets.DIALOG_MONITOR_SLACK_WEBHOOK }}
        run: |
          curl -X POST "$SLACK_WEBHOOK" \
            -H "Content-Type: application/json" \
            -d '{
              "text": "ðŸš¨ @Eric @MaxPark @Kota @Gentaro *Login to Matsuri HR API failed!* Status code: '${{ steps.login.outputs.status_code }}'"
            }'

      - name: Send Slack success message
        if: steps.login.outputs.status_code == '200'
        env:
          SLACK_WEBHOOK: ${{ secrets.DIALOG_MONITOR_SLACK_WEBHOOK }}
        run: |
          curl -X POST "$SLACK_WEBHOOK" \
            -H "Content-Type: application/json" \
            -d '{
              "text": "âœ… *Matsuri HR API login successful!* Status code: '${{ steps.login.outputs.status_code }}'"
            }'
